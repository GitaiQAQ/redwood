syntax = "proto3";

package Redwood.swarm.libp2p;
option go_package = "redwood.dev/swarm/libp2p/pb";

import "github.com/gogo/protobuf/gogoproto/gogo.proto";
import "blob/pb/blob.proto";

option (gogoproto.gostring_all) = true;
option (gogoproto.equal_all) = true;
option (gogoproto.verbose_equal_all) = true;
option (gogoproto.goproto_stringer_all) = false;
option (gogoproto.stringer_all) =  true;
option (gogoproto.populate_all) = true;
option (gogoproto.testgen_all) = true;
option (gogoproto.benchgen_all) = true;
option (gogoproto.marshaler_all) = true;
option (gogoproto.sizer_all) = true;
option (gogoproto.unmarshaler_all) = true;

message Msg {
    oneof msg {
        FetchBlobManifest fetchBlobManifest = 1;
        SendBlobManifest sendBlobManifest = 2;
        FetchBlobChunk fetchBlobChunk = 3;
        SendBlobChunk sendBlobChunk = 4;
    }
}

message FetchBlobManifest {
    Redwood.blob.BlobID id = 1;
}

message SendBlobManifest {
    Redwood.blob.Manifest manifest = 1;
    bool exists = 2;
}

message FetchBlobChunk {
    bytes sha3 = 1;
}

message SendBlobChunk {
    bytes chunk = 1;
    bool exists = 2;
}