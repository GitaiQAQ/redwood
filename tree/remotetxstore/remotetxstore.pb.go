// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
//  protoc-gen-go v1.23.0
//  protoc        v3.14.0
// source: remotetxstore.proto

package remotetxstore

import (
	context "context"
	reflect "reflect"
	sync "sync"

	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type AuthenticateMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Payload:
	//  *AuthenticateMessage_AuthenticateChallenge_
	//  *AuthenticateMessage_AuthenticateSignature_
	//  *AuthenticateMessage_AuthenticateResponse_
	Payload isAuthenticateMessage_Payload `protobuf_oneof:"payload"`
}

func (x *AuthenticateMessage) Reset() {
	*x = AuthenticateMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_remotetxstore_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthenticateMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthenticateMessage) ProtoMessage() {}

func (x *AuthenticateMessage) ProtoReflect() protoreflect.Message {
	mi := &file_remotetxstore_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthenticateMessage.ProtoReflect.Descriptor instead.
func (*AuthenticateMessage) Descriptor() ([]byte, []int) {
	return file_remotetxstore_proto_rawDescGZIP(), []int{0}
}

func (m *AuthenticateMessage) GetPayload() isAuthenticateMessage_Payload {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (x *AuthenticateMessage) GetAuthenticateChallenge() *AuthenticateMessage_AuthenticateChallenge {
	if x, ok := x.GetPayload().(*AuthenticateMessage_AuthenticateChallenge_); ok {
		return x.AuthenticateChallenge
	}
	return nil
}

func (x *AuthenticateMessage) GetAuthenticateSignature() *AuthenticateMessage_AuthenticateSignature {
	if x, ok := x.GetPayload().(*AuthenticateMessage_AuthenticateSignature_); ok {
		return x.AuthenticateSignature
	}
	return nil
}

func (x *AuthenticateMessage) GetAuthenticateResponse() *AuthenticateMessage_AuthenticateResponse {
	if x, ok := x.GetPayload().(*AuthenticateMessage_AuthenticateResponse_); ok {
		return x.AuthenticateResponse
	}
	return nil
}

type isAuthenticateMessage_Payload interface {
	isAuthenticateMessage_Payload()
}

type AuthenticateMessage_AuthenticateChallenge_ struct {
	AuthenticateChallenge *AuthenticateMessage_AuthenticateChallenge `protobuf:"bytes,1,opt,name=authenticateChallenge,proto3,oneof"`
}

type AuthenticateMessage_AuthenticateSignature_ struct {
	AuthenticateSignature *AuthenticateMessage_AuthenticateSignature `protobuf:"bytes,2,opt,name=authenticateSignature,proto3,oneof"`
}

type AuthenticateMessage_AuthenticateResponse_ struct {
	AuthenticateResponse *AuthenticateMessage_AuthenticateResponse `protobuf:"bytes,3,opt,name=authenticateResponse,proto3,oneof"`
}

func (*AuthenticateMessage_AuthenticateChallenge_) isAuthenticateMessage_Payload() {}

func (*AuthenticateMessage_AuthenticateSignature_) isAuthenticateMessage_Payload() {}

func (*AuthenticateMessage_AuthenticateResponse_) isAuthenticateMessage_Payload() {}

type Key struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EncryptedKey [][]byte `protobuf:"bytes,1,rep,name=encryptedKey,proto3" json:"encryptedKey,omitempty"`
}

func (x *Key) Reset() {
	*x = Key{}
	if protoimpl.UnsafeEnabled {
		mi := &file_remotetxstore_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Key) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Key) ProtoMessage() {}

func (x *Key) ProtoReflect() protoreflect.Message {
	mi := &file_remotetxstore_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Key.ProtoReflect.Descriptor instead.
func (*Key) Descriptor() ([]byte, []int) {
	return file_remotetxstore_proto_rawDescGZIP(), []int{1}
}

func (x *Key) GetEncryptedKey() [][]byte {
	if x != nil {
		return x.EncryptedKey
	}
	return nil
}

type AddMessageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   []byte `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Data []byte `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *AddMessageRequest) Reset() {
	*x = AddMessageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_remotetxstore_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddMessageRequest) ProtoMessage() {}

func (x *AddMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_remotetxstore_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddMessageRequest.ProtoReflect.Descriptor instead.
func (*AddMessageRequest) Descriptor() ([]byte, []int) {
	return file_remotetxstore_proto_rawDescGZIP(), []int{2}
}

func (x *AddMessageRequest) GetId() []byte {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *AddMessageRequest) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type AddMessageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddMessageResponse) Reset() {
	*x = AddMessageResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_remotetxstore_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddMessageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddMessageResponse) ProtoMessage() {}

func (x *AddMessageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_remotetxstore_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddMessageResponse.ProtoReflect.Descriptor instead.
func (*AddMessageResponse) Descriptor() ([]byte, []int) {
	return file_remotetxstore_proto_rawDescGZIP(), []int{3}
}

type RemoveMessageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id []byte `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *RemoveMessageRequest) Reset() {
	*x = RemoveMessageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_remotetxstore_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveMessageRequest) ProtoMessage() {}

func (x *RemoveMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_remotetxstore_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveMessageRequest.ProtoReflect.Descriptor instead.
func (*RemoveMessageRequest) Descriptor() ([]byte, []int) {
	return file_remotetxstore_proto_rawDescGZIP(), []int{4}
}

func (x *RemoveMessageRequest) GetId() []byte {
	if x != nil {
		return x.Id
	}
	return nil
}

type RemoveMessageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RemoveMessageResponse) Reset() {
	*x = RemoveMessageResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_remotetxstore_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveMessageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveMessageResponse) ProtoMessage() {}

func (x *RemoveMessageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_remotetxstore_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveMessageResponse.ProtoReflect.Descriptor instead.
func (*RemoveMessageResponse) Descriptor() ([]byte, []int) {
	return file_remotetxstore_proto_rawDescGZIP(), []int{5}
}

type FetchMessageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id []byte `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *FetchMessageRequest) Reset() {
	*x = FetchMessageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_remotetxstore_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FetchMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FetchMessageRequest) ProtoMessage() {}

func (x *FetchMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_remotetxstore_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FetchMessageRequest.ProtoReflect.Descriptor instead.
func (*FetchMessageRequest) Descriptor() ([]byte, []int) {
	return file_remotetxstore_proto_rawDescGZIP(), []int{6}
}

func (x *FetchMessageRequest) GetId() []byte {
	if x != nil {
		return x.Id
	}
	return nil
}

type FetchMessageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []byte `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *FetchMessageResponse) Reset() {
	*x = FetchMessageResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_remotetxstore_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FetchMessageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FetchMessageResponse) ProtoMessage() {}

func (x *FetchMessageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_remotetxstore_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FetchMessageResponse.ProtoReflect.Descriptor instead.
func (*FetchMessageResponse) Descriptor() ([]byte, []int) {
	return file_remotetxstore_proto_rawDescGZIP(), []int{7}
}

func (x *FetchMessageResponse) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type AllMessagesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AllMessagesRequest) Reset() {
	*x = AllMessagesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_remotetxstore_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AllMessagesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AllMessagesRequest) ProtoMessage() {}

func (x *AllMessagesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_remotetxstore_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AllMessagesRequest.ProtoReflect.Descriptor instead.
func (*AllMessagesRequest) Descriptor() ([]byte, []int) {
	return file_remotetxstore_proto_rawDescGZIP(), []int{8}
}

type AllMessagesResponsePacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   []byte `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Data []byte `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *AllMessagesResponsePacket) Reset() {
	*x = AllMessagesResponsePacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_remotetxstore_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AllMessagesResponsePacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AllMessagesResponsePacket) ProtoMessage() {}

func (x *AllMessagesResponsePacket) ProtoReflect() protoreflect.Message {
	mi := &file_remotetxstore_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AllMessagesResponsePacket.ProtoReflect.Descriptor instead.
func (*AllMessagesResponsePacket) Descriptor() ([]byte, []int) {
	return file_remotetxstore_proto_rawDescGZIP(), []int{9}
}

func (x *AllMessagesResponsePacket) GetId() []byte {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *AllMessagesResponsePacket) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type AuthenticateMessage_AuthenticateChallenge struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Challenge []byte `protobuf:"bytes,1,opt,name=challenge,proto3" json:"challenge,omitempty"`
}

func (x *AuthenticateMessage_AuthenticateChallenge) Reset() {
	*x = AuthenticateMessage_AuthenticateChallenge{}
	if protoimpl.UnsafeEnabled {
		mi := &file_remotetxstore_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthenticateMessage_AuthenticateChallenge) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthenticateMessage_AuthenticateChallenge) ProtoMessage() {}

func (x *AuthenticateMessage_AuthenticateChallenge) ProtoReflect() protoreflect.Message {
	mi := &file_remotetxstore_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthenticateMessage_AuthenticateChallenge.ProtoReflect.Descriptor instead.
func (*AuthenticateMessage_AuthenticateChallenge) Descriptor() ([]byte, []int) {
	return file_remotetxstore_proto_rawDescGZIP(), []int{0, 0}
}

func (x *AuthenticateMessage_AuthenticateChallenge) GetChallenge() []byte {
	if x != nil {
		return x.Challenge
	}
	return nil
}

type AuthenticateMessage_AuthenticateSignature struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Signature []byte `protobuf:"bytes,1,opt,name=signature,proto3" json:"signature,omitempty"`
}

func (x *AuthenticateMessage_AuthenticateSignature) Reset() {
	*x = AuthenticateMessage_AuthenticateSignature{}
	if protoimpl.UnsafeEnabled {
		mi := &file_remotetxstore_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthenticateMessage_AuthenticateSignature) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthenticateMessage_AuthenticateSignature) ProtoMessage() {}

func (x *AuthenticateMessage_AuthenticateSignature) ProtoReflect() protoreflect.Message {
	mi := &file_remotetxstore_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthenticateMessage_AuthenticateSignature.ProtoReflect.Descriptor instead.
func (*AuthenticateMessage_AuthenticateSignature) Descriptor() ([]byte, []int) {
	return file_remotetxstore_proto_rawDescGZIP(), []int{0, 1}
}

func (x *AuthenticateMessage_AuthenticateSignature) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

type AuthenticateMessage_AuthenticateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Jwt string `protobuf:"bytes,1,opt,name=jwt,proto3" json:"jwt,omitempty"`
}

func (x *AuthenticateMessage_AuthenticateResponse) Reset() {
	*x = AuthenticateMessage_AuthenticateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_remotetxstore_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthenticateMessage_AuthenticateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthenticateMessage_AuthenticateResponse) ProtoMessage() {}

func (x *AuthenticateMessage_AuthenticateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_remotetxstore_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthenticateMessage_AuthenticateResponse.ProtoReflect.Descriptor instead.
func (*AuthenticateMessage_AuthenticateResponse) Descriptor() ([]byte, []int) {
	return file_remotetxstore_proto_rawDescGZIP(), []int{0, 2}
}

func (x *AuthenticateMessage_AuthenticateResponse) GetJwt() string {
	if x != nil {
		return x.Jwt
	}
	return ""
}

var File_remotetxstore_proto protoreflect.FileDescriptor

var file_remotetxstore_proto_rawDesc = []byte{
	0x0a, 0x13, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x74, 0x78, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x72, 0x65, 0x64, 0x77, 0x6f, 0x6f, 0x64, 0x22, 0xf9,
	0x03, 0x0a, 0x13, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x65, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x6a, 0x0a, 0x15, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e,
	0x74, 0x69, 0x63, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x72, 0x65, 0x64, 0x77, 0x6f, 0x6f, 0x64, 0x2e,
	0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x65,
	0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x48, 0x00, 0x52, 0x15, 0x61, 0x75, 0x74,
	0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e,
	0x67, 0x65, 0x12, 0x6a, 0x0a, 0x15, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61,
	0x74, 0x65, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x32, 0x2e, 0x72, 0x65, 0x64, 0x77, 0x6f, 0x6f, 0x64, 0x2e, 0x41, 0x75, 0x74, 0x68,
	0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e,
	0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x65, 0x53, 0x69, 0x67, 0x6e,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x48, 0x00, 0x52, 0x15, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74,
	0x69, 0x63, 0x61, 0x74, 0x65, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x67,
	0x0a, 0x14, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x72,
	0x65, 0x64, 0x77, 0x6f, 0x6f, 0x64, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63,
	0x61, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x65,
	0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48,
	0x00, 0x52, 0x14, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x1a, 0x35, 0x0a, 0x15, 0x41, 0x75, 0x74, 0x68, 0x65,
	0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x1a, 0x35,
	0x0a, 0x15, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x65, 0x53, 0x69,
	0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x1a, 0x28, 0x0a, 0x14, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74,
	0x69, 0x63, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x6a, 0x77, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6a, 0x77, 0x74, 0x42,
	0x09, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0x29, 0x0a, 0x03, 0x4b, 0x65,
	0x79, 0x12, 0x22, 0x0a, 0x0c, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x65, 0x64, 0x4b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x0c, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74,
	0x65, 0x64, 0x4b, 0x65, 0x79, 0x22, 0x37, 0x0a, 0x11, 0x41, 0x64, 0x64, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x14,
	0x0a, 0x12, 0x41, 0x64, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x26, 0x0a, 0x14, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x02, 0x69, 0x64, 0x22, 0x17, 0x0a, 0x15,
	0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x25, 0x0a, 0x13, 0x46, 0x65, 0x74, 0x63, 0x68, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x02, 0x69, 0x64, 0x22, 0x2a, 0x0a, 0x14,
	0x46, 0x65, 0x74, 0x63, 0x68, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x14, 0x0a, 0x12, 0x41, 0x6c, 0x6c, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x3f,
	0x0a, 0x19, 0x41, 0x6c, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x32,
	0x9d, 0x03, 0x0a, 0x0b, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x12,
	0x50, 0x0a, 0x0c, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x65, 0x12,
	0x1c, 0x2e, 0x72, 0x65, 0x64, 0x77, 0x6f, 0x6f, 0x64, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e,
	0x74, 0x69, 0x63, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x1c, 0x2e,
	0x72, 0x65, 0x64, 0x77, 0x6f, 0x6f, 0x64, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69,
	0x63, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x00, 0x28, 0x01, 0x30,
	0x01, 0x12, 0x47, 0x0a, 0x0a, 0x41, 0x64, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x1a, 0x2e, 0x72, 0x65, 0x64, 0x77, 0x6f, 0x6f, 0x64, 0x2e, 0x41, 0x64, 0x64, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x72, 0x65,
	0x64, 0x77, 0x6f, 0x6f, 0x64, 0x2e, 0x41, 0x64, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x50, 0x0a, 0x0d, 0x52, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1d, 0x2e, 0x72, 0x65,
	0x64, 0x77, 0x6f, 0x6f, 0x64, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x72, 0x65, 0x64,
	0x77, 0x6f, 0x6f, 0x64, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4d, 0x0a, 0x0c,
	0x46, 0x65, 0x74, 0x63, 0x68, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1c, 0x2e, 0x72,
	0x65, 0x64, 0x77, 0x6f, 0x6f, 0x64, 0x2e, 0x46, 0x65, 0x74, 0x63, 0x68, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x72, 0x65, 0x64,
	0x77, 0x6f, 0x6f, 0x64, 0x2e, 0x46, 0x65, 0x74, 0x63, 0x68, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x52, 0x0a, 0x0b, 0x41,
	0x6c, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x12, 0x1b, 0x2e, 0x72, 0x65, 0x64,
	0x77, 0x6f, 0x6f, 0x64, 0x2e, 0x41, 0x6c, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x72, 0x65, 0x64, 0x77, 0x6f, 0x6f,
	0x64, 0x2e, 0x41, 0x6c, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x22, 0x00, 0x30, 0x01, 0x42,
	0x20, 0x5a, 0x1e, 0x72, 0x65, 0x64, 0x77, 0x6f, 0x6f, 0x64, 0x2e, 0x64, 0x65, 0x76, 0x2f, 0x74,
	0x72, 0x65, 0x65, 0x2f, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x74, 0x78, 0x73, 0x74, 0x6f, 0x72,
	0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_remotetxstore_proto_rawDescOnce sync.Once
	file_remotetxstore_proto_rawDescData = file_remotetxstore_proto_rawDesc
)

func file_remotetxstore_proto_rawDescGZIP() []byte {
	file_remotetxstore_proto_rawDescOnce.Do(func() {
		file_remotetxstore_proto_rawDescData = protoimpl.X.CompressGZIP(file_remotetxstore_proto_rawDescData)
	})
	return file_remotetxstore_proto_rawDescData
}

var file_remotetxstore_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_remotetxstore_proto_goTypes = []interface{}{
	(*AuthenticateMessage)(nil),                       // 0: redwood.AuthenticateMessage
	(*Key)(nil),                                       // 1: redwood.Key
	(*AddMessageRequest)(nil),                         // 2: redwood.AddMessageRequest
	(*AddMessageResponse)(nil),                        // 3: redwood.AddMessageResponse
	(*RemoveMessageRequest)(nil),                      // 4: redwood.RemoveMessageRequest
	(*RemoveMessageResponse)(nil),                     // 5: redwood.RemoveMessageResponse
	(*FetchMessageRequest)(nil),                       // 6: redwood.FetchMessageRequest
	(*FetchMessageResponse)(nil),                      // 7: redwood.FetchMessageResponse
	(*AllMessagesRequest)(nil),                        // 8: redwood.AllMessagesRequest
	(*AllMessagesResponsePacket)(nil),                 // 9: redwood.AllMessagesResponsePacket
	(*AuthenticateMessage_AuthenticateChallenge)(nil), // 10: redwood.AuthenticateMessage.AuthenticateChallenge
	(*AuthenticateMessage_AuthenticateSignature)(nil), // 11: redwood.AuthenticateMessage.AuthenticateSignature
	(*AuthenticateMessage_AuthenticateResponse)(nil),  // 12: redwood.AuthenticateMessage.AuthenticateResponse
}
var file_remotetxstore_proto_depIdxs = []int32{
	10, // 0: redwood.AuthenticateMessage.authenticateChallenge:type_name -> redwood.AuthenticateMessage.AuthenticateChallenge
	11, // 1: redwood.AuthenticateMessage.authenticateSignature:type_name -> redwood.AuthenticateMessage.AuthenticateSignature
	12, // 2: redwood.AuthenticateMessage.authenticateResponse:type_name -> redwood.AuthenticateMessage.AuthenticateResponse
	0,  // 3: redwood.RemoteStore.Authenticate:input_type -> redwood.AuthenticateMessage
	2,  // 4: redwood.RemoteStore.AddMessage:input_type -> redwood.AddMessageRequest
	4,  // 5: redwood.RemoteStore.RemoveMessage:input_type -> redwood.RemoveMessageRequest
	6,  // 6: redwood.RemoteStore.FetchMessage:input_type -> redwood.FetchMessageRequest
	8,  // 7: redwood.RemoteStore.AllMessages:input_type -> redwood.AllMessagesRequest
	0,  // 8: redwood.RemoteStore.Authenticate:output_type -> redwood.AuthenticateMessage
	3,  // 9: redwood.RemoteStore.AddMessage:output_type -> redwood.AddMessageResponse
	5,  // 10: redwood.RemoteStore.RemoveMessage:output_type -> redwood.RemoveMessageResponse
	7,  // 11: redwood.RemoteStore.FetchMessage:output_type -> redwood.FetchMessageResponse
	9,  // 12: redwood.RemoteStore.AllMessages:output_type -> redwood.AllMessagesResponsePacket
	8,  // [8:13] is the sub-list for method output_type
	3,  // [3:8] is the sub-list for method input_type
	3,  // [3:3] is the sub-list for extension type_name
	3,  // [3:3] is the sub-list for extension extendee
	0,  // [0:3] is the sub-list for field type_name
}

func init() { file_remotetxstore_proto_init() }
func file_remotetxstore_proto_init() {
	if File_remotetxstore_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_remotetxstore_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthenticateMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_remotetxstore_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Key); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_remotetxstore_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddMessageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_remotetxstore_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddMessageResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_remotetxstore_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveMessageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_remotetxstore_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveMessageResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_remotetxstore_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FetchMessageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_remotetxstore_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FetchMessageResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_remotetxstore_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AllMessagesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_remotetxstore_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AllMessagesResponsePacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_remotetxstore_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthenticateMessage_AuthenticateChallenge); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_remotetxstore_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthenticateMessage_AuthenticateSignature); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_remotetxstore_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthenticateMessage_AuthenticateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_remotetxstore_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*AuthenticateMessage_AuthenticateChallenge_)(nil),
		(*AuthenticateMessage_AuthenticateSignature_)(nil),
		(*AuthenticateMessage_AuthenticateResponse_)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_remotetxstore_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_remotetxstore_proto_goTypes,
		DependencyIndexes: file_remotetxstore_proto_depIdxs,
		MessageInfos:      file_remotetxstore_proto_msgTypes,
	}.Build()
	File_remotetxstore_proto = out.File
	file_remotetxstore_proto_rawDesc = nil
	file_remotetxstore_proto_goTypes = nil
	file_remotetxstore_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// RemoteStoreClient is the client API for RemoteStore service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RemoteStoreClient interface {
	Authenticate(ctx context.Context, opts ...grpc.CallOption) (RemoteStore_AuthenticateClient, error)
	AddMessage(ctx context.Context, in *AddMessageRequest, opts ...grpc.CallOption) (*AddMessageResponse, error)
	RemoveMessage(ctx context.Context, in *RemoveMessageRequest, opts ...grpc.CallOption) (*RemoveMessageResponse, error)
	FetchMessage(ctx context.Context, in *FetchMessageRequest, opts ...grpc.CallOption) (*FetchMessageResponse, error)
	AllMessages(ctx context.Context, in *AllMessagesRequest, opts ...grpc.CallOption) (RemoteStore_AllMessagesClient, error)
}

type remoteStoreClient struct {
	cc grpc.ClientConnInterface
}

func NewRemoteStoreClient(cc grpc.ClientConnInterface) RemoteStoreClient {
	return &remoteStoreClient{cc}
}

func (c *remoteStoreClient) Authenticate(ctx context.Context, opts ...grpc.CallOption) (RemoteStore_AuthenticateClient, error) {
	stream, err := c.cc.NewStream(ctx, &_RemoteStore_serviceDesc.Streams[0], "/redwood.RemoteStore/Authenticate", opts...)
	if err != nil {
		return nil, err
	}
	x := &remoteStoreAuthenticateClient{stream}
	return x, nil
}

type RemoteStore_AuthenticateClient interface {
	Send(*AuthenticateMessage) error
	Recv() (*AuthenticateMessage, error)
	grpc.ClientStream
}

type remoteStoreAuthenticateClient struct {
	grpc.ClientStream
}

func (x *remoteStoreAuthenticateClient) Send(m *AuthenticateMessage) error {
	return x.ClientStream.SendMsg(m)
}

func (x *remoteStoreAuthenticateClient) Recv() (*AuthenticateMessage, error) {
	m := new(AuthenticateMessage)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *remoteStoreClient) AddMessage(ctx context.Context, in *AddMessageRequest, opts ...grpc.CallOption) (*AddMessageResponse, error) {
	out := new(AddMessageResponse)
	err := c.cc.Invoke(ctx, "/redwood.RemoteStore/AddMessage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *remoteStoreClient) RemoveMessage(ctx context.Context, in *RemoveMessageRequest, opts ...grpc.CallOption) (*RemoveMessageResponse, error) {
	out := new(RemoveMessageResponse)
	err := c.cc.Invoke(ctx, "/redwood.RemoteStore/RemoveMessage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *remoteStoreClient) FetchMessage(ctx context.Context, in *FetchMessageRequest, opts ...grpc.CallOption) (*FetchMessageResponse, error) {
	out := new(FetchMessageResponse)
	err := c.cc.Invoke(ctx, "/redwood.RemoteStore/FetchMessage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *remoteStoreClient) AllMessages(ctx context.Context, in *AllMessagesRequest, opts ...grpc.CallOption) (RemoteStore_AllMessagesClient, error) {
	stream, err := c.cc.NewStream(ctx, &_RemoteStore_serviceDesc.Streams[1], "/redwood.RemoteStore/AllMessages", opts...)
	if err != nil {
		return nil, err
	}
	x := &remoteStoreAllMessagesClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type RemoteStore_AllMessagesClient interface {
	Recv() (*AllMessagesResponsePacket, error)
	grpc.ClientStream
}

type remoteStoreAllMessagesClient struct {
	grpc.ClientStream
}

func (x *remoteStoreAllMessagesClient) Recv() (*AllMessagesResponsePacket, error) {
	m := new(AllMessagesResponsePacket)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// RemoteStoreServer is the server API for RemoteStore service.
type RemoteStoreServer interface {
	Authenticate(RemoteStore_AuthenticateServer) error
	AddMessage(context.Context, *AddMessageRequest) (*AddMessageResponse, error)
	RemoveMessage(context.Context, *RemoveMessageRequest) (*RemoveMessageResponse, error)
	FetchMessage(context.Context, *FetchMessageRequest) (*FetchMessageResponse, error)
	AllMessages(*AllMessagesRequest, RemoteStore_AllMessagesServer) error
}

// UnimplementedRemoteStoreServer can be embedded to have forward compatible implementations.
type UnimplementedRemoteStoreServer struct {
}

func (*UnimplementedRemoteStoreServer) Authenticate(RemoteStore_AuthenticateServer) error {
	return status.Errorf(codes.Unimplemented, "method Authenticate not implemented")
}
func (*UnimplementedRemoteStoreServer) AddMessage(context.Context, *AddMessageRequest) (*AddMessageResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddMessage not implemented")
}
func (*UnimplementedRemoteStoreServer) RemoveMessage(context.Context, *RemoveMessageRequest) (*RemoveMessageResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveMessage not implemented")
}
func (*UnimplementedRemoteStoreServer) FetchMessage(context.Context, *FetchMessageRequest) (*FetchMessageResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FetchMessage not implemented")
}
func (*UnimplementedRemoteStoreServer) AllMessages(*AllMessagesRequest, RemoteStore_AllMessagesServer) error {
	return status.Errorf(codes.Unimplemented, "method AllMessages not implemented")
}

func RegisterRemoteStoreServer(s *grpc.Server, srv RemoteStoreServer) {
	s.RegisterService(&_RemoteStore_serviceDesc, srv)
}

func _RemoteStore_Authenticate_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(RemoteStoreServer).Authenticate(&remoteStoreAuthenticateServer{stream})
}

type RemoteStore_AuthenticateServer interface {
	Send(*AuthenticateMessage) error
	Recv() (*AuthenticateMessage, error)
	grpc.ServerStream
}

type remoteStoreAuthenticateServer struct {
	grpc.ServerStream
}

func (x *remoteStoreAuthenticateServer) Send(m *AuthenticateMessage) error {
	return x.ServerStream.SendMsg(m)
}

func (x *remoteStoreAuthenticateServer) Recv() (*AuthenticateMessage, error) {
	m := new(AuthenticateMessage)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _RemoteStore_AddMessage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddMessageRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RemoteStoreServer).AddMessage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/redwood.RemoteStore/AddMessage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RemoteStoreServer).AddMessage(ctx, req.(*AddMessageRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RemoteStore_RemoveMessage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveMessageRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RemoteStoreServer).RemoveMessage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/redwood.RemoteStore/RemoveMessage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RemoteStoreServer).RemoveMessage(ctx, req.(*RemoveMessageRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RemoteStore_FetchMessage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FetchMessageRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RemoteStoreServer).FetchMessage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/redwood.RemoteStore/FetchMessage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RemoteStoreServer).FetchMessage(ctx, req.(*FetchMessageRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RemoteStore_AllMessages_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(AllMessagesRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(RemoteStoreServer).AllMessages(m, &remoteStoreAllMessagesServer{stream})
}

type RemoteStore_AllMessagesServer interface {
	Send(*AllMessagesResponsePacket) error
	grpc.ServerStream
}

type remoteStoreAllMessagesServer struct {
	grpc.ServerStream
}

func (x *remoteStoreAllMessagesServer) Send(m *AllMessagesResponsePacket) error {
	return x.ServerStream.SendMsg(m)
}

var _RemoteStore_serviceDesc = grpc.ServiceDesc{
	ServiceName: "redwood.RemoteStore",
	HandlerType: (*RemoteStoreServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AddMessage",
			Handler:    _RemoteStore_AddMessage_Handler,
		},
		{
			MethodName: "RemoveMessage",
			Handler:    _RemoteStore_RemoveMessage_Handler,
		},
		{
			MethodName: "FetchMessage",
			Handler:    _RemoteStore_FetchMessage_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Authenticate",
			Handler:       _RemoteStore_Authenticate_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
		{
			StreamName:    "AllMessages",
			Handler:       _RemoteStore_AllMessages_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "remotetxstore.proto",
}
